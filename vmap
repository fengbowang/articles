
//nothing happened

obj-m += hello.o
all:
        make -C /lib/modules/`uname -r`/build SUBDIRS=$(PWD) modules
clean:
        make -C /lib/modules/`uname -r`/build SUBDIRS=$(PWD) clean
        
        
#include <linux/kernel.h>   
#include <linux/init.h>   
#include <linux/module.h>   
//MODULE_LICENCE("GPL");   
static int __init hello_init(void)   
{  
    
    int  a[2];
    int i = 0;

 
    printk(KERN_ALERT "hello_init, world! from kernel space, a[190000] = %d....\n", a[0]);
    
   // return 0; 
	
    for (i = 0; i < 4096*12000; i++)
    {
           printk(KERN_ALERT "hello_init write %u int \r\n", i);
           a[i] = 999999999;
           printk(KERN_ALERT "hello_init write %u int ok %u\r\n", i, a[i]);
    }
    return 0; 
    a[190000] = 100;  
    printk(KERN_ALERT "Hello, world! from kernel space, a[190000] = %d after ....\n", a[190000]);
    a[4096/4] = 100;
    a[4096/4 + 2] = 100;
    a[4096/2] = 100;
    a[4096/2 + 1] = 100;
    a[4096 + 2] = 100;

    printk(KERN_ALERT "Hello, world! from kernel space, a[190000] = %d after ....\n", a[190000]);
    return 0;   
}   
  
static void __exit hello_exit(void)   
{   
	int  a[200000];
	int i = 0;

    printk(KERN_ALERT "hello_exit, world! Leaving kernel space....\n");   

	
	for (i = 0; i < 4096*12000; i++)
    {
           printk(KERN_ALERT "hello_exit write %u int \r\n", i);
           a[i] = 999999999;
           printk(KERN_ALERT "hello_exit write %u int ok %u\r\n", i, a[i]);
    }
}   
module_init(hello_init);   
module_exit(hello_exit); 

//nothing happend









git clone git://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git

git checkout test_20160622_vmap_stack_sg_init_stackbuf
config HAVE_ARCH_VMAP_STACK
	def_bool y
ubuntu:~/vmap/luto/linux# git branch
* (detached from test_20160622_vmap_stack_sg_init_stackbuf)
  master
root@ubuntu:~/vmap/luto/linux# git describe

20160610_uvc_compat_for_linus-374-g16aaa6a
root@ubuntu:~/vmap/luto/linux# 
root@ubuntu:~/vmap/luto/linux# 

ubuntu:~/vmap/luto/linux# git describe --tag
test_20160622_vmap_stack_sg_init_stackbuf

make



In file included from include/asm-generic/percpu.h:6:0,
                 from ./arch/x86/include/asm/percpu.h:551,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from include/linux/preempt.h:59,
                 from include/linux/spinlock.h:50,
                 from include/linux/seqlock.h:35,
                 from include/linux/time.h:5,
                 from include/uapi/linux/timex.h:56,
                 from include/linux/timex.h:56,
                 from include/linux/sched.h:19,
                 from arch/x86/mm/fault.c:6:
arch/x86/mm/fault.c: In function ‘no_context’:
arch/x86/mm/fault.c:772:18: error: ‘orig_ist’ undeclared (first use in this function)
    this_cpu_read(orig_ist.ist[DOUBLEFAULT_STACK]) -
                  ^
include/linux/percpu-defs.h:305:9: note: in definition of macro ‘__pcpu_size_call_return’
  typeof(variable) pscr_ret__;     \
         ^
arch/x86/mm/fault.c:772:4: note: in expansion of macro ‘this_cpu_read’
    this_cpu_read(orig_ist.ist[DOUBLEFAULT_STACK]) -
    ^
arch/x86/mm/fault.c:772:18: note: each undeclared identifier is reported only once for each function it appears in
    this_cpu_read(orig_ist.ist[DOUBLEFAULT_STACK]) -
                  ^
include/linux/percpu-defs.h:305:9: note: in definition of macro ‘__pcpu_size_call_return’
  typeof(variable) pscr_ret__;     \
         ^
arch/x86/mm/fault.c:772:4: note: in expansion of macro ‘this_cpu_read’
    this_cpu_read(orig_ist.ist[DOUBLEFAULT_STACK]) -
    ^
make[2]: *** [arch/x86/mm/fault.o] Error 1
make[1]: *** [arch/x86/mm] Error 2
make: *** [arch/x86] Error 2















